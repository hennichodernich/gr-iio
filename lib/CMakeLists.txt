# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-iio
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

include_directories(${IIO_INCLUDE_DIRS} ${AD9361_INCLUDE_DIRS})

include(FindFLEX REQUIRED)
find_package(BISON "3.0.2" REQUIRED)

flex_target(lexer
	${CMAKE_CURRENT_SOURCE_DIR}/iio_math_lexer.l ${CMAKE_CURRENT_BINARY_DIR}/lexer.c)
bison_target(parser
	${CMAKE_CURRENT_SOURCE_DIR}/iio_math_parser.y ${CMAKE_CURRENT_BINARY_DIR}/parser.c
  DEFINES_FILE ${CMAKE_CURRENT_BINARY_DIR}/parser.h)

list(APPEND iio_sources
	attr_sink_impl.cc
	attr_source_impl.cc
	converter_ss_impl.cc
	device_sink_impl.cc
	device_source_impl.cc
	eightbit_sink_impl.cc
	eightbit_source_impl.cc
	flexi_source_impl.cc
	fmcomms2_sink_impl.cc
	fmcomms2_source_impl.cc
	fmcomms5_sink_impl.cc
	fmcomms5_source_impl.cc
	hnchbbboard_source_impl.cc
	hnchboard2_source_impl.cc
	hnchboard2u_source_impl.cc
	iio_math_gen_impl.cc
	iio_math_impl.cc
	iio_modulo_const_ff_impl.cc
	iio_modulo_ff_impl.cc
	iio_power_ff_impl.cc
	multi_source_impl.cc
	pluto_sink_impl.cc
	pluto_source_impl.cc
	thirtytwobit_sink_impl.cc
	thirtytwobit_source_impl.cc
	${FLEX_lexer_OUTPUTS}
	${BISON_parser_OUTPUTS}
)

set(iio_sources "${iio_sources}" PARENT_SCOPE)
if(NOT iio_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT iio_sources)

add_library(gnuradio-iio SHARED ${iio_sources})
target_link_libraries(gnuradio-iio
	gnuradio::gnuradio-runtime
	gnuradio::gnuradio-blocks
	gnuradio::gnuradio-analog
	gnuradio::gnuradio-pmt
	gnuradio::gnuradio-filter
	gnuradio::gnuradio-fft
	${IIO_LIBRARIES}
	${AD9361_LIBRARIES})
target_include_directories(gnuradio-iio
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_BINARY_DIR}/>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-iio PROPERTIES DEFINE_SYMBOL "gnuradio_iio_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-iio PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-iio)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################
include(GrTest)

# If your unit tests require special include paths, add them here
#include_directories()
# List all files that contain Boost.UTF unit tests here
list(APPEND test_iio_sources
)
# Anything we need to link to for the unit tests go here
list(APPEND GR_TEST_TARGET_DEPS gnuradio-iio)

if(NOT test_iio_sources)
    MESSAGE(STATUS "No C++ unit tests... skipping")
    return()
endif(NOT test_iio_sources)

foreach(qa_file ${test_iio_sources})
    GR_ADD_CPP_TEST("iio_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
endforeach(qa_file)
